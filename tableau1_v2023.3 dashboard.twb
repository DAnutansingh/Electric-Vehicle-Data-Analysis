<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='Electric_Vehicle_Population_Data' inline='true' name='federated.12hmpti16mreuk0zjmugv1827yz3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electric_Vehicle_Population_Data' name='textscan.0w1c93z0cmm5oo178mxtm1240026'>
            <connection class='textscan' directory='C:/Users/devis/Downloads/Electric Vehicle Data-20240623T092537Z-001/Electric Vehicle Data' filename='Electric_Vehicle_Population_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0w1c93z0cmm5oo178mxtm1240026' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0w1c93z0cmm5oo178mxtm1240026' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN (1-10)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VIN (1-10)]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>VIN (1-10)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOL Vehicle ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOL Vehicle ID]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>DOL Vehicle ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Location]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Vehicle Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]&quot;' value='% of Total' />
        </aliases>
      </column>
      <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
      </column>
      <column caption='Avg Electric Range' datatype='real' name='[Calculation_898468157855563777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Electric Range])' />
      </column>
      <column caption='Total BEV Vehicles' datatype='integer' name='[Calculation_898468157867524098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type]=&quot;Battery Electric Vehicle (BEV)&quot; THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column caption='% of BEV vehicles' datatype='real' name='[Calculation_898468157869907971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_898468157867524098]/[Calculation_898468157853995008]' />
      </column>
      <column caption='Total PHEV Vehicles' datatype='integer' name='[Calculation_898468157871017988]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type]=&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot; THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column caption='% of PHEV Vehicles' datatype='real' name='[Calculation_898468157872033797]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_898468157871017988]/[Calculation_898468157853995008]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
          <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
          <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
        </aliases>
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
          <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
        </aliases>
      </column>
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Model]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Id' datatype='string' name='[VIN (1-10)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Electric_Vehicle_Population_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[pcto:usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <group caption='Action (EV Type,Make,Model)' hidden='true' name='[Action (EV Type,Make,Model)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Electric Vehicle Type]' />
          <groupfilter function='level-members' level='[Make]' />
          <groupfilter function='level-members' level='[Model]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#398949'>
              <bucket>&quot;Not eligible due to low battery range&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;Eligibility unknown as battery range has not been researched&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <filter class='quantitative' column='[Model Year]' filter-group='2' included-values='in-range'>
        <min>2011</min>
      </filter>
      <filter class='categorical' column='[State]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[State]' member='&quot;AK&quot;' />
            <groupfilter function='member' level='[State]' member='&quot;HI&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Electric_Vehicle_Population_Data.csv' id='Electric_Vehicle_Population_Data.csv_209E8B063D304B459A76146C5422B681'>
            <properties context=''>
              <relation connection='textscan.0w1c93z0cmm5oo178mxtm1240026' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='VIN (1-10)' ordinal='0' />
                  <column datatype='string' name='County' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='integer' name='Postal Code' ordinal='4' />
                  <column datatype='integer' name='Model Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
                  <column datatype='integer' name='Electric Range' ordinal='10' />
                  <column datatype='integer' name='Base MSRP' ordinal='11' />
                  <column datatype='integer' name='Legislative District' ordinal='12' />
                  <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
                  <column datatype='string' name='Vehicle Location' ordinal='14' />
                  <column datatype='string' name='Electric Utility' ordinal='15' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.12hmpti16mreuk0zjmugv1827yz3'>
      <datasources>
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
      </datasources>
      <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
        <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
            <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
            <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
          </aliases>
        </column>
        <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
            <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
          </aliases>
        </column>
        <column datatype='string' name='[Model]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]' context='true'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:State:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' />
            <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' />
            <groupfilter function='member' level='[none:State:nk]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_0BF128CCA21D47C9823E909B78D7F261]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 10 Total Vehicles by Make' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_B9D1666A4CD44B3293F7801E878F76AC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by CAFV Eligibility' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_26DF5394C94C4F048BB95BC501011596]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_BE06F389BE354CA893A69AD1176C8D5D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by Model Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_FC536EA906224E4B98B9FB49FA5D7641]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by Model' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Avg Electric Range' datatype='real' name='[Calculation_898468157855563777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Electric Range])' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157855563777]' derivation='User' name='[usr:Calculation_898468157855563777:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157855563777:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Avg Electric Range</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157855563777:qk]> Miles]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{48D575EA-DC57-4DE5-807B-68670D7EF3AE}' />
    </worksheet>
    <worksheet name='Top 10 Total Vehicles by Make'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Top &lt;</run>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&gt; Total Vehicles by Make</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[pcto:usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_898468157853995008]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]' value='Tableau Medium' />
            <format attr='text-align' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='8'>&lt;</run>
                <run fontname='Tableau Medium' fontsize='8'>[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]</run>
                <run fontname='Tableau Medium' fontsize='8'>&gt; ; &lt;</run>
                <run fontname='Tableau Medium' fontsize='8'>[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]</run>
                <run fontname='Tableau Medium' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]</rows>
        <cols>[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]</cols>
      </table>
      <simple-id uuid='{1CA39706-9D76-4A24-8E4C-5073FF4A5F52}' />
    </worksheet>
    <worksheet name='Total BEV Vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total BEV Vehicles' datatype='integer' name='[Calculation_898468157867524098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type]=&quot;Battery Electric Vehicle (BEV)&quot; THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='% of BEV vehicles' datatype='real' name='[Calculation_898468157869907971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_898468157867524098]/[Calculation_898468157853995008]' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157867524098]' derivation='User' name='[usr:Calculation_898468157867524098:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_898468157869907971]' derivation='User' name='[usr:Calculation_898468157869907971:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157869907971:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157867524098:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157869907971:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total BEV Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157867524098:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='14'><![CDATA[% of Total: <[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157869907971:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4E24B153-3D7C-46BE-97F5-8C6C68683BB5}' />
    </worksheet>
    <worksheet name='Total PHEV Vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total PHEV Vehicles' datatype='integer' name='[Calculation_898468157871017988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type]=&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot; THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='% of PHEV Vehicles' datatype='real' name='[Calculation_898468157872033797]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_898468157871017988]/[Calculation_898468157853995008]' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157871017988]' derivation='User' name='[usr:Calculation_898468157871017988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_898468157872033797]' derivation='User' name='[usr:Calculation_898468157872033797:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157872033797:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157871017988:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157872033797:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total PHEV Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157871017988:qk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='14'><![CDATA[% of Total: <[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157872033797:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{047542BB-793C-4E56-AF5D-F5431F992CE3}' />
    </worksheet>
    <worksheet name='Total Vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{80E0B201-2FC1-4055-A131-7A0DA540DBD9}' />
    </worksheet>
    <worksheet name='Total Vehicles by CAFV Eligibility'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_898468157891584007]' role='measure' type='quantitative' user:unnamed='Total Vehicles by CAFV Eligibility'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[pcto:usr:Calculation_898468157853995008:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_898468157891584007]' derivation='User' name='[usr:Calculation_898468157891584007:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <wedge-size column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk:2]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]> ; <[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk:2]>]]></run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.2596685886383057' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3314917087554932' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk] + [federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157891584007:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D3F44929-477A-49BA-8FAC-F118A070B365}' />
    </worksheet>
    <worksheet name='Total Vehicles by Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[pcto:usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.12hmpti16mreuk0zjmugv1827yz3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]&quot;</bucket>
              <bucket>&quot;[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MODEL Y&quot;</bucket>
              <bucket>&quot;MODEL 3&quot;</bucket>
              <bucket>&quot;LEAF&quot;</bucket>
              <bucket>&quot;MODEL S&quot;</bucket>
              <bucket>&quot;BOLT EV&quot;</bucket>
              <bucket>&quot;MODEL X&quot;</bucket>
              <bucket>&quot;VOLT&quot;</bucket>
              <bucket>&quot;ID.4&quot;</bucket>
              <bucket>&quot;NIRO&quot;</bucket>
              <bucket>&quot;PACIFICA&quot;</bucket>
              <bucket>&quot;WRANGLER&quot;</bucket>
              <bucket>&quot;MUSTANG MACH-E&quot;</bucket>
              <bucket>&quot;PRIUS PRIME&quot;</bucket>
              <bucket>&quot;X5&quot;</bucket>
              <bucket>&quot;I3&quot;</bucket>
              <bucket>&quot;FUSION&quot;</bucket>
              <bucket>&quot;EV6&quot;</bucket>
              <bucket>&quot;IONIQ 5&quot;</bucket>
              <bucket>&quot;C-MAX&quot;</bucket>
              <bucket>&quot;RAV4 PRIME&quot;</bucket>
              <bucket>&quot;R1T&quot;</bucket>
              <bucket>&quot;XC90&quot;</bucket>
              <bucket>&quot;BOLT EUV&quot;</bucket>
              <bucket>&quot;E-GOLF&quot;</bucket>
              <bucket>&quot;E-TRON&quot;</bucket>
              <bucket>&quot;XC60&quot;</bucket>
              <bucket>&quot;PRIUS PLUG-IN&quot;</bucket>
              <bucket>&quot;XC40&quot;</bucket>
              <bucket>&quot;R1S&quot;</bucket>
              <bucket>&quot;500&quot;</bucket>
              <bucket>&quot;CLARITY&quot;</bucket>
              <bucket>&quot;OUTLANDER&quot;</bucket>
              <bucket>&quot;F-150&quot;</bucket>
              <bucket>&quot;PS2&quot;</bucket>
              <bucket>&quot;I4&quot;</bucket>
              <bucket>&quot;GRAND CHEROKEE&quot;</bucket>
              <bucket>&quot;KONA ELECTRIC&quot;</bucket>
              <bucket>&quot;Q5 E&quot;</bucket>
              <bucket>&quot;HARDTOP&quot;</bucket>
              <bucket>&quot;A3&quot;</bucket>
              <bucket>&quot;SOLTERRA&quot;</bucket>
              <bucket>&quot;TAYCAN&quot;</bucket>
              <bucket>&quot;SORENTO&quot;</bucket>
              <bucket>&quot;IX&quot;</bucket>
              <bucket>&quot;330E&quot;</bucket>
              <bucket>&quot;SOUL&quot;</bucket>
              <bucket>&quot;530E&quot;</bucket>
              <bucket>&quot;SPORTAGE&quot;</bucket>
              <bucket>&quot;CAYENNE&quot;</bucket>
              <bucket>&quot;C40&quot;</bucket>
              <bucket>&quot;ESCAPE&quot;</bucket>
              <bucket>&quot;EDV&quot;</bucket>
              <bucket>&quot;ARIYA&quot;</bucket>
              <bucket>&quot;Q4&quot;</bucket>
              <bucket>&quot;X3&quot;</bucket>
              <bucket>&quot;TRANSIT&quot;</bucket>
              <bucket>&quot;SPARK&quot;</bucket>
              <bucket>&quot;FOCUS&quot;</bucket>
              <bucket>&quot;SOUL EV&quot;</bucket>
              <bucket>&quot;I-PACE&quot;</bucket>
              <bucket>&quot;IONIQ&quot;</bucket>
              <bucket>&quot;COUNTRYMAN&quot;</bucket>
              <bucket>&quot;KONA&quot;</bucket>
              <bucket>&quot;GLC-CLASS&quot;</bucket>
              <bucket>&quot;AIR&quot;</bucket>
              <bucket>&quot;EQS-CLASS SUV&quot;</bucket>
              <bucket>&quot;EQS-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;E-TRON SPORTBACK&quot;</bucket>
              <bucket>&quot;EQB-CLASS&quot;</bucket>
              <bucket>&quot;IONIQ 6&quot;</bucket>
              <bucket>&quot;FORTWO ELECTRIC DRIVE&quot;</bucket>
              <bucket>&quot;AVIATOR&quot;</bucket>
              <bucket>&quot;Q5&quot;</bucket>
              <bucket>&quot;CX-90&quot;</bucket>
              <bucket>&quot;SANTA FE&quot;</bucket>
              <bucket>&quot;BZ4X&quot;</bucket>
              <bucket>&quot;TUCSON&quot;</bucket>
              <bucket>&quot;PANAMERA&quot;</bucket>
              <bucket>&quot;E-TRON GT&quot;</bucket>
              <bucket>&quot;EQE-CLASS SUV&quot;</bucket>
              <bucket>&quot;S60&quot;</bucket>
              <bucket>&quot;OPTIMA&quot;</bucket>
              <bucket>&quot;I8&quot;</bucket>
              <bucket>&quot;B-CLASS&quot;</bucket>
              <bucket>&quot;CORSAIR&quot;</bucket>
              <bucket>&quot;NX&quot;</bucket>
              <bucket>&quot;LYRIQ&quot;</bucket>
              <bucket>&quot;Q8&quot;</bucket>
              <bucket>&quot;GV60&quot;</bucket>
              <bucket>&quot;SONATA&quot;</bucket>
              <bucket>&quot;ELR&quot;</bucket>
              <bucket>&quot;EQE-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;FORTWO&quot;</bucket>
              <bucket>&quot;CROSSTREK&quot;</bucket>
              <bucket>&quot;I-MIEV&quot;</bucket>
              <bucket>&quot;RAV4&quot;</bucket>
              <bucket>&quot;EQ FORTWO&quot;</bucket>
              <bucket>&quot;RZ 450E&quot;</bucket>
              <bucket>&quot;GLE-CLASS&quot;</bucket>
              <bucket>&quot;PRIUS&quot;</bucket>
              <bucket>&quot;740E&quot;</bucket>
              <bucket>&quot;V60&quot;</bucket>
              <bucket>&quot;S90&quot;</bucket>
              <bucket>&quot;RS E-TRON GT&quot;</bucket>
              <bucket>&quot;RANGE ROVER SPORT&quot;</bucket>
              <bucket>&quot;RANGE ROVER&quot;</bucket>
              <bucket>&quot;KARMA&quot;</bucket>
              <bucket>&quot;G80&quot;</bucket>
              <bucket>&quot;C-CLASS&quot;</bucket>
              <bucket>&quot;CT6&quot;</bucket>
              <bucket>&quot;TONALE&quot;</bucket>
              <bucket>&quot;A7&quot;</bucket>
              <bucket>&quot;S-CLASS&quot;</bucket>
              <bucket>&quot;GV70&quot;</bucket>
              <bucket>&quot;TRANSIT CONNECT ELECTRIC&quot;</bucket>
              <bucket>&quot;ACCORD&quot;</bucket>
              <bucket>&quot;ROADSTER&quot;</bucket>
              <bucket>&quot;745E&quot;</bucket>
              <bucket>&quot;CITY&quot;</bucket>
              <bucket>&quot;A8 E&quot;</bucket>
              <bucket>&quot;745LE&quot;</bucket>
              <bucket>&quot;FLYING SPUR&quot;</bucket>
              <bucket>&quot;BENTAYGA&quot;</bucket>
              <bucket>&quot;918&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]' value='108' />
            <format attr='width' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]' value='144' />
            <format attr='height' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[:Measure Names]' value='30' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]' value='Tableau Medium' />
            <format attr='font-family' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Tableau Medium' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk] / ([federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk] / [federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]))</rows>
        <cols>[federated.12hmpti16mreuk0zjmugv1827yz3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FB4DAFA2-54B0-4E85-9C6B-0FD0D1A6F097}' />
    </worksheet>
    <worksheet name='Total Vehicles by Model Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' value='n#,##0,.0K;-#,##0,.0K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model Year:ok]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model Year:ok]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='stroke-color' id='refline1' value='#72b9664b' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dashed' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <reference-line axis-column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' z-order='1' />
            <reference-line axis-column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' enable-instant-analytics='true' formula='average' id='refline1' label='Avg: &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='8'>&lt;</run>
                <run fontname='Tableau Semibold' fontsize='8'>[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]</run>
                <run fontname='Tableau Semibold' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk] + [federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk])</rows>
        <cols>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model Year:ok]</cols>
      </table>
      <simple-id uuid='{3A2414DF-D057-4B7D-B805-3617AB10C379}' />
    </worksheet>
    <worksheet name='Total Vehicles by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
            <column caption='Total Vehicles' datatype='integer' name='[Calculation_898468157853995008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_898468157853995008]' derivation='User' name='[usr:Calculation_898468157853995008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]'>
            <groupfilter function='union' user:ui-action-filter='[Action5_FC536EA906224E4B98B9FB49FA5D7641]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[Model]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Make]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[Model]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[Model]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</column>
            <column>[federated.12hmpti16mreuk0zjmugv1827yz3].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
              <text column='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' />
              <lod column='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]' />
              <geometry column='[federated.12hmpti16mreuk0zjmugv1827yz3].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='8'>&lt;</run>
                <run fontname='Tableau Semibold' fontsize='8'>[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]</run>
                <run fontname='Tableau Semibold' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12hmpti16mreuk0zjmugv1827yz3].[Latitude (generated)]</rows>
        <cols>[federated.12hmpti16mreuk0zjmugv1827yz3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{59BB5788-6776-4D39-BDBC-E41C493AA001}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='22'>ELECTRIC VEHICLE DATA ANALYSIS</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#00000000' />
          <format attr='border-color' value='#e6e6e6' />
          <format attr='border-style' value='solid' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.12hmpti16mreuk0zjmugv1827yz3' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='15' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.12hmpti16mreuk0zjmugv1827yz3'>
        <column caption='CAFV Eligibility' datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
            <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown' />
            <alias key='&quot;Not eligible due to low battery range&quot;' value=' CAFV Not Eligible' />
          </aliases>
        </column>
        <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
            <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
          </aliases>
        </column>
        <column datatype='string' name='[Model]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='50777' id='5' param='vert' type-v2='layout-flow' w='85063' x='14437' y='8666'>
            <zone h='50777' id='6' type-v2='layout-basic' w='85063' x='14437' y='8666'>
              <zone h='50777' id='8' param='horz' type-v2='layout-flow' w='85063' x='14437' y='8666'>
                <zone h='50777' id='9' param='vert' type-v2='layout-flow' w='85063' x='14437' y='8666'>
                  <zone h='13444' id='12' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='85063' x='14437' y='8666'>
                    <zone h='13444' id='14' name='Avg Electric Range' show-title='false' w='21312' x='14438' y='8667'>
                      <layout-cache cell-count-w='1' fixed-size-h='77' type-h='fixed' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='6' />
                        <format attr='background-color' value='#ffffff' />
                      </zone-style>
                    </zone>
                    <zone h='13444' id='13' name='Total Vehicles' show-title='false' w='21250' x='35750' y='8667'>
                      <layout-cache cell-count-w='1' fixed-size-h='77' type-h='fixed' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='6' />
                        <format attr='background-color' value='#ffffff' />
                      </zone-style>
                    </zone>
                    <zone h='13444' id='15' name='Total BEV Vehicles' show-title='false' w='21250' x='57000' y='8667'>
                      <layout-cache cell-count-w='1' fixed-size-h='109' type-h='fixed' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='6' />
                      </zone-style>
                    </zone>
                    <zone h='13444' id='16' name='Total PHEV Vehicles' show-title='false' w='21250' x='78250' y='8667'>
                      <layout-cache cell-count-w='1' fixed-size-h='109' type-h='fixed' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='6' />
                      </zone-style>
                    </zone>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='background-color' value='#e6e6e681' />
                    </zone-style>
                  </zone>
                  <zone h='37333' id='18' param='horz' type-v2='layout-flow' w='85063' x='14437' y='22110'>
                    <zone fixed-size='698' h='37333' id='19' is-fixed='true' name='Total Vehicles by Model Year' w='44375' x='14437' y='22110'>
                      <layout-cache minheight='182' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='6' />
                      </zone-style>
                    </zone>
                    <zone h='37333' id='20' name='Total Vehicles by State' w='40688' x='58812' y='22110'>
                      <layout-cache minheight='242' minwidth='200' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='6' />
                      </zone-style>
                    </zone>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='background-color' value='#e6e6e681' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='77001' id='17' param='vert' type-v2='layout-flow' w='13937' x='500' y='22110'>
            <zone fixed-size='82' h='10000' id='29' is-fixed='true' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='filter' values='database' w='13187' x='875' y='22110'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='79' h='9667' id='30' is-fixed='true' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]' type-v2='filter' values='database' w='13187' x='875' y='32110'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='82' h='10000' id='31' is-fixed='true' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]' type-v2='filter' values='database' w='13187' x='875' y='41777'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6778' id='32' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]' type-v2='filter' values='database' w='13187' x='875' y='51777'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='6' />
              <format attr='margin-top' value='0' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone h='7777' id='7' type-v2='title' w='99000' x='500' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone h='39668' id='22' name='Top 10 Total Vehicles by Make' w='28500' x='14437' y='59443'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='6' />
              <format attr='background-color' value='#e6e6e681' />
            </zone-style>
          </zone>
          <zone h='39668' id='26' name='Total Vehicles by CAFV Eligibility' w='27500' x='42937' y='59443'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='6' />
              <format attr='background-color' value='#e6e6e681' />
            </zone-style>
          </zone>
          <zone h='39668' id='28' name='Total Vehicles by Model' w='29063' x='70437' y='59443'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='6' />
              <format attr='background-color' value='#e6e6e681' />
            </zone-style>
          </zone>
          <zone h='13444' id='33' is-scaled='1' param='C:/Users/devis/Downloads/ev.jpg' type-v2='bitmap' w='13937' x='500' y='8666'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4444' id='25' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='8500' x='33875' y='60444' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='22'>ELECTRIC VEHICLE DATA ANALYSIS</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='38' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='7777' id='7' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00ff7734' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='13444' id='33' is-fixed='true' is-scaled='1' param='C:/Users/devis/Downloads/ev.jpg' type-v2='bitmap' w='13937' x='500' y='8666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00ff7734' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='13444' id='14' is-fixed='true' name='Avg Electric Range' show-title='false' w='21312' x='14438' y='8667'>
                  <layout-cache cell-count-w='1' fixed-size-h='77' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='13444' id='13' is-fixed='true' name='Total Vehicles' show-title='false' w='21250' x='35750' y='8667'>
                  <layout-cache cell-count-w='1' fixed-size-h='77' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='13444' id='15' is-fixed='true' name='Total BEV Vehicles' show-title='false' w='21250' x='57000' y='8667'>
                  <layout-cache cell-count-w='1' fixed-size-h='109' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='13444' id='16' is-fixed='true' name='Total PHEV Vehicles' show-title='false' w='21250' x='78250' y='8667'>
                  <layout-cache cell-count-w='1' fixed-size-h='109' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='10000' id='29' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='filter' values='database' w='13187' x='875' y='22110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' h='9667' id='30' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]' type-v2='filter' values='database' w='13187' x='875' y='32110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='10000' id='31' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]' type-v2='filter' values='database' w='13187' x='875' y='41777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='32' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]' type-v2='filter' values='database' w='13187' x='875' y='51777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37333' id='19' is-fixed='true' name='Total Vehicles by Model Year' w='44375' x='14437' y='22110'>
                  <layout-cache minheight='182' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37333' id='20' is-fixed='true' name='Total Vehicles by State' w='40688' x='58812' y='22110'>
                  <layout-cache minheight='242' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39668' id='22' is-fixed='true' name='Top 10 Total Vehicles by Make' w='28500' x='14437' y='59443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e681' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39668' id='26' is-fixed='true' name='Total Vehicles by CAFV Eligibility' w='27500' x='42937' y='59443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e681' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39668' id='28' is-fixed='true' name='Total Vehicles by Model' w='29063' x='70437' y='59443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e681' />
                  </zone-style>
                </zone>
                <zone h='4444' id='25' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='8500' x='33875' y='60444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{00980D09-85F3-4F36-80C1-567A73D52A2E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2C80E46C-CE2D-4D12-83BB-C768FD686685}' />
    </window>
    <window class='worksheet' name='Avg Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157855563777:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>67.833335549321248</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{8D75DDBC-3ACD-4A21-B2B1-399E26933C32}' />
    </window>
    <window class='worksheet' name='Total BEV Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CDCCD8A6-2921-4E75-8DD9-A70668CEEA77}' />
    </window>
    <window class='worksheet' name='Total PHEV Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{196F41D9-D561-4296-B793-F2F0A1A5D0CC}' />
    </window>
    <window class='worksheet' name='Total Vehicles by Model Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{270A61B4-722F-4A48-9A92-66D8D94E5AFF}' />
    </window>
    <window class='worksheet' name='Total Vehicles by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82023265-308C-4288-8165-6FCA181552DD}' />
    </window>
    <window class='worksheet' name='Top 10 Total Vehicles by Make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]' type='filter' />
            <card param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]</field>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</field>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3441867F-2595-4951-AA26-904869B7ABA2}' />
    </window>
    <window class='worksheet' name='Total Vehicles by CAFV Eligibility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C60D1577-1CE0-49C0-B089-9C26BD664C0F}' />
    </window>
    <window class='worksheet' name='Total Vehicles by Model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12hmpti16mreuk0zjmugv1827yz3].[usr:Calculation_898468157853995008:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Make:nk]</field>
            <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{143ABB6C-87FC-4FF3-A0B3-9C8C945E696E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg Electric Range'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Top 10 Total Vehicles by Make'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total BEV Vehicles'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total PHEV Vehicles'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Vehicles'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Vehicles by CAFV Eligibility'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles by Model'>
          <zoom type='fit-width' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.12hmpti16mreuk0zjmugv1827yz3].[:Measure Names]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;[federated.12hmpti16mreuk0zjmugv1827yz3].[pcto:usr:Calculation_898468157853995008:qk]&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Total Vehicles by Model Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles by State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <device-preview visible='true' />
      <simple-id uuid='{48A860DA-755A-469F-8439-ABCCABD26EDE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='81' name='Avg Electric Range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      cm1LLZv87/wH+bubj8zVarsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Total Vehicles by Make' width='192'>
      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
      /F++oPgea1wV6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='113' name='Total BEV Vehicles' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='113' name='Total PHEV Vehicles' width='192'>
      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
      BIHp06ezc+dOJk2adFNUntbc/BbcBMLDw+nVq5dZWV1d3XUJADSt+g4YMMCsTKVSXVe9AwcO
      NFODLl682O4OU5VKRWlpqVmZNVWqNUqlkq1bt1rd89ORVXK1Ws0///lPCw+SXC5n+fLlv4lR
      vyW/ewFo+YsvW9Hr9Van5pZotdoO/b7A1no7Sv/+/c2Etby8nH379rV5fmVlpYUO7+Xlhd+V
      pONtkZKSQnZ2tllZR3Z8NpOYmGjxOwhBEHj00Ud5+OGHfxOjfkt+W63pBG+88QbPPfeczT++
      EEWRXbt2WWyJ9vDwMDMSN2/ezNKlS0lOTrZZEH755ReLj+/m5mbV+NTr9bz44ouMHj3a9G/y
      5Mmktcpy7+npyezZs806zjfffGP1xzaiKLJ582aqqqrMyqOjo/H29m6z3Wq1mi1btlioVrbs
      +Gx9//3791vUM2TIEB566KHfXOeHW8AL1PzLrmPHjuHj48OUKVOYPHkykZGR+Pr6ml66SqUi
      IyODzz77jMTERItOPXDgQDPd2Wg0cuHCBZ566ilcXV0ZP348sbGxREVF4efnZ9pmoNFoyMnJ
      4auvviIuLs7Cbx8eHk5ERIRFu4uLi21asAOYM2cOu3fvJjMzE2hSV55//nmWLVvGPffcg6en
      J+Xl5Xz44YcW27FdXFyYO3duu50vLS2N9PR0i+va2/FpjZqaGjIyMizKJ06c2OndsDea370A
      tKS6upqdO3eyc+fODl3n6enJH/7whzY/dkNDAwcOHODAgQMdqlcul7NkyRKr7tWjR49ajNQK
      hcLqj9h9fHx46aWXeOGFF0y6dWNjI+vXr2f9+vXttmH27NmMsJIBvhm9Xs/WrVstPFXt7fhs
      i5KSEostIQAfffQRH330kc31BAYG8vnnn9vktr1efntzUjfj7e3N6tWrGTp0aJfW6+zszIsv
      vmjVf65Wq/nll1/MygRB4KmnnmpT5YiOjubVV1/tUBsmTJjA8uXL2x3909PTSU5ONiu71o7P
      tmgdLeP3wO9eAKZOnWrh97YFqVTKjBkz+OKLLxg/frzF8dGjRzNgwIAO662CIDBy5Eg2bdrE
      vffea/X6vLw8C9forFmzmDdvXrt1x8bGWniZrOHs7Mwf//hH1q1b1+7iniiKfP/99xadtrM7
      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
    </thumbnail>
    <thumbnail height='81' name='Total Vehicles' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by CAFV Eligibility' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by Model' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Ac15bn98ssb7tMV9tq7z0apgGSoHuOHPNmY2ZntBqtRjuxipFWE1Io
      FApFKLSh2JE2FLuhD9rQ7oZGuztGGs08N2/J9x7NIx9oQBC2gUYD7W1Vd1V1VXV5b7My9aFA
      EHwEATRIGL7t3xdENzLvPZmdN/Pe/zn3HEFRFIVDDvkPEEEQBPFJG3HIIU+SwwFwyD2RJOlJ
      m/BIORwAh9yTdDr9pE14pBwOgEPuiSJLXDl3hp/+5Kd8dHke6Y4Vo1QpI8mfXUIWUkG2/XEU
      RWZxcRFZUYjsbhJKFW8fkw5t44sXvqhDblw+hy+SIZ+KsB/P3u0gdtZucG1pG1nKc/adt/nJ
      T37GlYWNzxxVKZWQ73N9hwPgkHsiiGpmTn+D/XCE06emqWZjnP3gQ6LJDH/7b/45/+77PyeZ
      SfHR+2dY3PSTi2xzcyOIgMDy7CVSVZlL5z9GERQWr13k+oqHmOcGH12+zvnZm9R+SYOR4mts
      Zc1cOvceCzcW0Bn1KAooisL28hyXr6+Qjvn5v/7se8iAqDbx0qvHCYcqnJwcIB708OG5i2QL
      Of7lP/mf+fHZy2TiId478wu29+Kfu77DAXDIgXjtRz9m9Og4r732Jn3d3cy88BIGpYpKo+HN
      H36fzCdLBkHg1Hgrc6t+khU9Fe8V3pvb5qPX/opAHvQNLQQ3rpLIVT7TvtrkJLe3Si6VYHN7
      l9d/9D18yRKF4A3ObRQxZta4uV+jp3+YmfG+zxpXSfHjty4x0WPnJ7+4Qnd3Hy+/dApZqqJR
      K/zND378ues5HACHHAgFUKtUKHINtVpFpVJh5dJZlMYe2pwW7pwRdR15hu0z38PaM4FcrdDS
      PcQ//OM/plEL1gYroigilQv4g/vEwgEyxSoYmvlP/qPfpKOrH5vJxORQG7F0EVmSUGm0qFUq
      JOkLJjaKDKIKtVqNXKuhUilUKjIXz75Pc+84drOKTDREPFPAu7MLgOpP/uRP/uSR37VDvrYU
      i0UMRgNarZbmlma63E3MXVvk1Isv09Pfy8aN6wwdPYp/20NXTx9udzsWiw2nzYSgNiKVC0we
      P0Z7RxeF8BaBRImurk6s9kZcDQbsFiO+UByhnAZjIxa9mnI2gaW1l4EuJ754jRNjvehtLagy
      u8QVJ88dHUSv09HS0nzLSgGNxkCL202LVeDm1j4vvfg8/b0tzM2vc3RikO3dML19PRjkEnnB
      QHDPx1/8+Z/9L8InjjBZlqlUKve4FYf8h0g6naahoeFJm/FIMBgMgvqTHxRF+ZXXfA85OG9d
      fZ8fzb79pM14ZNweACqVCrPZDIBnZQ7J0slgRyPzlz7ENXiKRm2Ry7PzdAwfoa/dzEfvnEU2
      2zk5cxw5E+Tc7BKiaOT06XFCiRoDnU2AwtbKCu3DoxTDXiqmdloadE/qWm+ztTxPLFtGrTXS
      425kayeASm/hyGg/22vLVDUNDPW2kc2VcditAIR8XsxNbix6zRO2vk6tkOLa4jpaYwPjo4P4
      N5eIZUo0tnZiNepodNoppJNgsGDUqu/f4BeQrRTYjvnue1yHs5XRjkEurF3DqNNzrG+Ci2tz
      pAt1GfPkwBFcDU6ubt2kJstMdY9ybvkyRp2BU4NHWdxdI5jcv28/WrWGnuZO1ve2abY1Mt0z
      zsX1a2QKOQBGOwawGixc2ZxnrGOQnqYOlv0bqEQVANv7uzRZGwmnIsAXLILnrs5z+epl5HKM
      n7/2Oku7+/zg+z9m4uRzXH3rB4QKWVa9GY72O/j/vv9T4t4VFNcQr776IqqUnws3tm+1JKAu
      h3j/4ipn3j+PxfR0PDz9Y9PoVWqmjk5S3E8wPDPD8ckRQtsraF09dLc0UC7lCASjt86Q8O9s
      seOPPFG770TKx7D3TDHolFnYSVCoCczMzNDb0cyu14MCeLweHle0i8lg4uL6HKdHTvDC6Ek+
      XLzENyefA0AURCwGM29ee59oOsHzIzPMe5Z4YewUrgYnHy1f5uTg9AP1M907ztHecQRB4PmR
      GT5avsw3J+r9tNqbsJmsZIs5pnvGaLM388a19/BG/HQ1uelp7mC8YxBB+LS9u94dQaXHIEp4
      VzfoGh+GYpqizoXTbGCiz8HmXn1UN7T0Y8jvk0dm8ep53nnvAtVfaqtr8gXi86/jGHoWo/rp
      E51kucj87CzzS+u43N2ENm+y5g0j3nGT8vs+rL3HkLL793WsPDbkGqs357i8FKCz2Upy38/s
      7Cy74SSdNjW7ySIVWY3+Md3z3UiA50dnWNhZJVvK890T3yaaSQAgCAKCIPD3Tn+X8c4hErkU
      iVwKURDwhH3MDBxhM+R9oH6ubMyTK+ZRFIV8uch3T3yLSLqu75erFVpsTbTYm2i0OihUivzd
      Z36dkwPTmHQGHGYbA209vDzxLEPtdQn1C+/OhNvMz5ei9DZZQW9BW06SLVXY8KXoabUAUEyH
      KBrsGBGZOHGaV7/1HL/8jhdUWlxWJ/1jfQif7+aJI4oGpmdmmB4fQhDVHDv5LHZVlnD6U0HA
      FwgR9W8Sj0WJZZ8SoUBUMTJ1jGePD+D3x7A3dzAzM0NXiwNnVx/BuQ/Qu7o/87Z7lLw0/gwf
      r1whko5h1Bl4/co7NDU466aKInPbi3y0dJlGqwOrwYxZbwLg2eFjbId3WfKtH6g/tUqNXqPj
      9cvv0mJ3AZDMp/lo+TLpfIb9VIyNoJe3rr1Ps62Rd298RCi5TyQd5/zqVRxmG3APGbRvbIRS
      TmGgpw2zs51jQ61cuXyN9vFTDLXb2d/1EEgW+MY3v4FZp2JjbRXfThh3Xzd7nnUi8QLuztb6
      CBPA2dyOXvVwN/dRYbZaQC6yurrBfjyD06JjZWUVxdhIT1sje94twqkCTlczYyMjuFtdVCUw
      6rVP2nRQaqyvrpHISgwP9ZCP7eHZDVBWtNhtNgqFMr29HajFLzcCrqxeZ9Zz857HiILIaMcA
      XS43AJF0jBMDR7jhXWGia5hYJsFY5yAdjW1cXJ8jXy5wvG+S82tX6Wxsp8vVjsNsIxAP3bMf
      AYFvTZ7GZrIiCAKhVITj/ZPMe5axGsxUpSpHescQBZHrniUG2nqY6h7h49VZytUKsqKwHd7l
      aO84c9uLhC9vfSqDHnLI3fg/X/sz/vV7f/XQ55t0RvLlL4j7ecJs/enHn8qgkiT9ykf+HXJw
      XCY7z/UffdJmPBK2+PhTGVStVuN0Op+kPYc8hcSKSS7uXH/SZjwy7ioQ/+jP/gWl5in+4Def
      5Z/9d/+IY3/4v2EIXiJW1ZFKFfn7f/BN/vd//KdMHO/H0DLGiG6P71+NMtXTycy4jTfni/xn
      3z0FgH/jJotbQbyBKH/0n/+naFVPXgnaWp5nfnGDzsERnEKFQFXGrLfQ06hnxRNCq9MxMtTD
      rj/FxFgvABfe/SmuiecZbHM8YevrlCMbvLsQpVFTonl4htDKebQmJ42tnSQiYY4fO8L28k0c
      vaPYDY9efv7WxPNYjWbCqShqUYXN1IDTYuMvP/wRJp2BF0ZP0Whx4IvtYdQZMOtNrAQ2cTta
      MBtMRNJxPl69ct9+Tg0eZbR9gL/48Id89/i3UItqUoUMHy5dBMBiMPNfv/oP+L9/8ddMdo1i
      N1lJ5tM4zDYU4NL6NVpsLm7urgJfoAKJeieqSoqMfx1r1zBKKcFyuMZv/53fZKqxwA1/Hlfn
      IH/nd36XwM2LlBSwOZto72hDi4J8x7KivW+ErhYbKo0W4SnRgfrHphno6+Po0Ul0KhWOxkZc
      DjsoCqJGR+/AEHq1gkL9OmqFKOaOMfKRey/SHjdWuxOLyYRaJaLVG2lsbMRqtdCgrpGqKmRK
      Elb9wzvBDsL7i+dZ8W9QrpY5t3qFrbCXD5cvAZAvF/n5/IcEEiHmvcuUKmX+9tKbtDta0Ko1
      /HT2XVpsjQ/Uz7XtBSKZuuwp1WoEE2HuXMae6JtizrOIgsK5lUss7K5SrUmkC1nypQLHeifp
      crmxmerhHV/wOhbpsGr5cHmfkd5mEMR6pB1QrcpoNbfkHEVBEUUEBEyWBhz2hs894oIg4mhs
      RlPKUpCfGhX9DkQsFgtmkwFHWw/To334Vq8TyX7q0Qh4POxH9/H7dshVnxbNQMBksmB3mCnk
      Sqg1OiwWC3qtmu7eVnZWFhAMLlSPSQc91jeJQWfguncJURDpanSzE/Hf/n+byUpVqlKsFBFv
      2SQAy4ENvj31Agat/oH6kWr1cB2VKCIIAtFMAp26rsq5Ha30NXcx0TnCmHuQI91jOC12Lq3P
      Ec3EMemNiILAnGeRUXc/8AUDwGA0MjXdz/ZumiaHDb3ZwfE+K6//9E22pSYmWo3koj7e+NlP
      GT75EkatlljAw+LCKhVRQ9izyEfnryMBazevML+0hmhqQPslJbmvEo2mftNEtYLf68XrD5KM
      +Lm5tE5JVmPQqQntbDC3uEampucbzz/LCzNjxONPiVAgikSCu/iCMQwGLZVCFq/XSySeQW1u
      Ju7z4O5peyymqESRZwaP0u5oYbC1lzZ7M95o/eHvaepAr9Ex0NLDom+N6q0H+Pee+Q08ER9W
      gwWDRs+17YX79iMg8M2J04y6B5jsHEFAYLxziIpUxe1sJZqJ8+/e/x7nVi+ztrfNyYGjNNtc
      jLgHWNvbIpKOsehf4/mRGULJupf/UAY95J78y5/8Gf/6g4eXQQdbe9kMeW9PJ58mNv/VoQx6
      yH1oNNh4pvvB4nS+CGf3ka/Imq+WzTtlUJVKhcPxdCgchzw9aO0Sms7o/Q/8mnJ7AAh3LJau
      n/uYwReex0ye1/7mZxiddganTtJhhx98721+5w//PkX/Eh/MbuFqbuf0Cyc+FwP0NJMIbROr
      NtDfaiYQTWGsVjB0dhDdXCaSKuDuG4ZsmEAkSXPHAF2tDlZuztHWP45ZXePGyhbHpifY2/XR
      2tmF6gksbaqZMBcXdzBo1AxPTOFfmyNfFWls7USlSHR1uomH9tA6mrHovowS9GBTl1w0T8KX
      ouNoG9HNONn9HPaOBuxd9ZibdDBLIVGgdbyZ/fUYuUie5hEX6WCGUqaMKAr0Ptf14FYpCjFP
      gvRelsY+Bw1tFqpFicCNIFK5hs1tpZAoIlVq6C06VJr6ctc14CQXyWNz30MF2l5epgRAmUhG
      4NVXX6W31U5w5SqVapbZ9RjZqI+Grmle/po9/AClUoVwwEuxUiEaT5KORCkrZfzBDEemp2m0
      qPH4okxOH6PFaUGpZskXyviDUWRJopIJ44vmiUUjPKkVlFzO0TpwhKFWA979LIrWdDscOhnd
      p6rAXjiMVv14ArCkikQpUwbA0WWj83g7Cd+tKbUCck2mmC6jyArZcI6uGTeR9RjuqVbcUy3o
      LAfcJ6JAyp+ma8ZNbLsedao1auh9touGVgtGu4Hukx009tjRW3VUixLVYpXIeoxqSUK+pUje
      1ysV9W3yzjvv4ItmuHptneMvHGXx4kUUYOnqx3x06Qa1g5n+5BEEejpb8O7eqevrGB5o5eqV
      SwSiRcaGu5ifvYRnL8r+7g76pg5SYT8K0OjuI+7ffrLLulvh0AueKE02w2fCoXubjXhCcST0
      aB/T58nW3oCorkuT1WKV7fO7GGx1aVMQBWxtVkRVPSxaEAW8F3cxOY0oikJ0K0Fj3wGn3wKo
      dWq8F33o79hkVavWKKZLt9tO+NI4umxIZYlcrEA2mqeYLhHdrPsS7j4AFJlcNku5WsPR0sVz
      zz2Hy1AlLutRylpquQDVmsL4ied58ZkjPGVBng+E0d6Ckt2ndNs1UaEiG5gY6SMaDlOUVExM
      jJOMhAnHM2jlMnqVRDRbAVFNt0vHTiT/5C5AFOkZHGVsoIXwfhqrs4Xx8XFanFbMrb2E5j7E
      6u55LK5HRVGoFKpIZYlqqUo5X6X7pJtcNI8syciyQqVYpVqSqBSr1Ko13NNtZPezVAp1f4vO
      dLAIW6VW77PjaBv5eAFZklFkhcRuCnunDUEQyMcKGB0GRJVIz7OdWFssWFss6K065Fr99XVX
      GTToXcMbjNM5METCu0VOquHu6UMjqmlrcRL0+zCa9FRFKy6b4Su4hY+XUiGHqDUiVHPEC2BV
      KagbrCT3dknkJXr7esjHQ4TiOXr6B6gUsthsNqrlAqUqiKKA0aAnGNyjtc3Nk3Bv1EpZVjZ3
      UOvNDPR1s+/bIpEtYW9y426yEQ6FcLW2fmlH2I9nv887vjfueYyiKIRXIkjlGkaHAY1OTWY/
      R2Ofg/21KK1jTUS3E8hVGUuzGY1eTWovQ/NQI3JNRhBFNA/hsS6miiR2U7gGnFSLEnqrjnKu
      gsGmRxAECqkiBqseQRSQJZlyvoLWpCW2FcfV7+Qvf/+HwqEf4JB78iAD4OvKn//e9w/9AIfc
      G7vOyfG2mSdtxiPhz/n+3cOhk5Egss6Gs8FIyO/B5OzApJbY9QWwNbtxWDTsbHqoaQx0dbqR
      Sxm8/jCgobunhVxRwdlQ3/Km1Kr4dndQm5y0Ndk/I7c+KWL7exQrMoKoxmEzEU+kEdQ62pob
      SUT3qYl6XA4L5UoNg6G+wMqmkmjNVnSPSVW5H3K1yF44hkqjp6W5kVQsTL4kYbTYMGjVGI0G
      qqUiikb3pSJwK6ESQeX+WSE+QZEV4v4kUllCb9bR0FrfvVUpVkiFMjjcNlQaFblEAbPDCEA+
      UcDkMB742cgnC2SjOUx2IxZXPaNJIVWklC9jb2tAlmRiviT2VivVsgQKGG0GyoUKenP973rX
      O3Pmzdd588NzKFKGv/g//hkX10P87Mc/JF2SeOMH3yNdTfHav/+AQszL375xltDyJS6tR9Bo
      1FQiG7zx0adxHfMfvM56pEI0uo/8lEy2VCo1W2vroFYT2fJQVKtRq1Ts764TTBYo5pLk82k2
      PYFbZ8gszV1kOxB7onbfSTXpJ5CWKce8rARSeL1e1Go1KpVQ39YJbG+sUf6iNIKPCgFUGhUI
      sHOjfv/kmszGeQ9yTaFakti9EWDpF2ugQHgjyvWfLSI/hJ3eOT8qjQrx1gCXKhKbl7zEfUmi
      njjr57dRZIVyoYJ3zo93zkfclyAb/TTj9N3DobVWtEqB/e11modGoZgkXDEzPT7C0W4di7tZ
      jA0OJo6fpry3RhGFcMDLhsf/OWnQ5mpiZ30Js63xiSwW74a9sRm7zUZzswuRKkG/n1Akhtlq
      J7kfoCLo0d7xoq+kgli6pyklwk9PRIuiEAkFCMQKNDYYKORS+P1+0vkKzUaIFCSKkoLpS+QE
      ehgEQcDWaqWcK9M303V7MZoKpQlvRsjF83Qdcd9+Y7cONeHqfriNWBqdmuDaPom9VD1LRKqI
      q9tB52Qbqf0MsZ0EEU+M5F4aUSWgKArBtX38iyGSwfp0/wu+jQKDTj2/WIky6HaARodQLVBT
      FCLxAi57/dMlV4uUVXq098gK0TXxPP/w97/LOz/6a7KP+230ANyZFcJsb+KFF55HSe6wd0dW
      iN0dP9HQLvuhPVKlp8TrcSsrxNHxTsKh1GeyQrT1duO7eQGV5ckoVLIkk0+VsDTWH3KVVkVj
      t5OxbwyS3Et9JX0oikL/Mz1MvDJMcq/+MKu1Ksr5CtWyhEolYm9rYOI7w2RjOdqGm1GpVWgN
      Wgae6bltx10HQFtHB2PHjiDWtHR0dNPc2MSrz43wxhtvUW2bZshpwCjkeOvn7/Hyb/wWFnsj
      kc153nnnIyr6BqSE93Y4tHdljnfPfETH2FFMT8FusE9osNkQAJ1Zw9LsLNcWVknF9rh85Spp
      2UizzURqf5e5xTUEk4sXn3uGF547TjH3BLX/OxA1Bvxr89zcCNHeaqdWSDM7O4snEEXU2VCq
      0NvzYJtMvmpy8Txtw00A+JeCtx48DatnN2nud7F9ZYd0OINvYQ/fzT2SwRRbV3ZQDjJHVsB7
      zcfiu2s09TpJhTJoDVqksoRndhf3eBt2t42Fd1Zp6m3E0mjG1mrFPd7K9uwurp76V+dQBj3k
      nvx86WdcSp996PMz0RyWRtNTIX78Mv/09L84lEEPuTd62UCHuufhG2j96mx5FBxmhTjknkjR
      CvHq07UX+qvkrhLBmR/9FTmri2yyyO/99iucfecdKkBL/zH6tUEWy928NGTlw/fPMLsW5MWX
      v8mpI8Ocfe17xPV2mhztyGkPAyd/DX1ymesxK9860f+YL+2LKeeTzC+sotZa6XPryWg66XJU
      WF1OYFLF8aWqGM12zKoqvcOj1NJ7+As6wqvzaEwmbC29dDtUzC5sICAwOn2M9I6HlrER9LLE
      xY8/RGNooKmllfiel71kieHRCQa7v7rXYSWxy4cLe1jUEj0TM+ytXEJWmWhs7aSUyzA6Msie
      ZxNzazcNjyErxJ2snd+imC3R1N1I+0gL5XyZ9YseStkSDrcdqVqjkCzg7LSj1BQSoTRGq57h
      0w/+jCiKwvbVHTLRHA1NFnqPdyFLMjffXUGuyfSd6KKUK+NbDDLzO0dYObsBCvQe7yKxl6J9
      pAX4gkVwKpZn5sUXqGUjeBYvUHWM8lvf/Q3mzr9PpZgmmSuD1szLp09idXVw6shw/bxoluMv
      vcTJY6N0OE0sbQZYnF+ko6fjK7itXx27W1sMTs1w/Ng4YrlArlimWi2Ty5VQUDE2Nc3EcA/N
      JgVPtIh/L0aj3Yje6mJm5jiFRIzltW1mnn2OZ04Ms7WxSzGfryfOVRSsja1MT0/T4XZz7MgE
      LZ19X+nDD6DUKnQMTNLbbCWVK6EzO5ienqarrQmlmKUoK0RTGUxfai/Aw5EIpFCpVTjabSiK
      gs6kY+Jbw9jbbbQONjF4qofOKTeFVJGuKTf9J7oo5w+Wc1UQBHqPd9F7rJNCph68Xy1LaPQa
      OsbbSO9nsbos6C06FFlBpVGh0ojszPtJhtJ1xxhfMAAUuci1S5cR9Q1UykX0RiOCqEZD7T7Z
      kcvMXbzIzVUP7qFxwtuL7GbV9Dc++ZoAdyLVFLSfCP2KjHdjlaWlNUqyjFTOs7q8xIZ3D0t7
      H9nAFrlKDateTSK0w1tvv0dLdxeSIKIVQaXRIUif/ePFgj6WlpZIZEuP7iIUGe/mCuFMBYNK
      JBMPs7S0RCieoa/bzva2D1lt/dK5QR+GZ//j44y80M/SB2u3f1ctVqmWqphsRjLRHMG1MFqj
      lmKuxO7CHpqH+EoVUkV8i0F0xk8iSRWkqkR4O4rOpMV4K1BTEAVElUgmliefLuLqdrJ7s+6k
      u7suKQgYjCYquQzNQ8cJLZ3j7Pu/wNEzgQrwrN1kaWP3Lk4hAb3RiFYlojI3o0lvoWrseOrC
      pdvamrh57RorK5tIosjA6CTT0xMYVCIIIjqdDrVKRBR1qMpBaromRAEcrd2cnhnHv+unt9nG
      xavzXLsyT2NXB1Ilz8bKCtF0HpVGg06nQ1Aepd9DQKPVIVClVK4iqtTodDpEAXS2TvYWLtDc
      3f0I+787iqywdcXL1uwOerOOXKKAVJEIrIZwj7Qi12Qi3hg6k5ZcIs/+VhSdQUs+kecggqQi
      K7cf9FwiTzaWo5yvIJUlVGqRYrY+/QlvRghvRug73oWl0UTbUDPBtTD6Wxtw7iqDlop5iqUK
      Wp0Bo0FPtVKkUKpisVgQ5CrpbB61RofZqKNUkTDo642Vi3kKpQoqtRaLxUSlmEdR6dA/Zm/k
      fVEUyqUiEiIGrRpZUKEWFapVGUGpUSxXEFRqzEYDUqUMKi1qFVSrNTQaFZVKFY1GQ7lUQEaN
      Qa9FqpQpVapo9QZqlRI1WUGnN6JVC1RrCpqvOIZIkSVy+SKCqMJkNFAuFahKMhqtHr1WTblc
      RqvTfWn58czaW8zlLxzoHKkiUS5UMFj07N4M0DnZfnsaAlApVpEqEgaLnlq1RqVURWfUoj7A
      c6Io9bCKarmK3lyP71dpVFRLVWpSDYNZTylXRq7JqDQqdEYttZqMSiVSypXRm3X8TzP/XPhM
      kbxyuXygCz3kV5+L3o9YLvxq5gb9b0/8Y+EzQ05+KjO3HfIkEVGhVT1da7ivktsDQBRFTKZ6
      CPPW0lVqli6GulzMnT9D0/BzNGoKXL56g/ahKQY7rHz49gcoZgcnZ46jZPc4O7uMWmXiudNj
      hOI1BrvqNVy9aws4uscphNZRu/pxmZ/8Fvqt5XmimRIanYnudifbu3u3iuT1sbW2gqS2MtTX
      RiZbwemoF8kL7ngwt3RgfUqK5EmFJNcWN9AZrIyNDeHfWCSeLdPY2onFoMXV6CCfSiAYrV+q
      SF5NJZETDuYgDW9HCW6EaepuxD3SiqIolPNlUuEMzX0uapJMaGMf92hrPb3hbvy2avSgKIrC
      vidGeCtC37EuzM66t1lRFLzzPjrG2smnCgRWggw/N0B0NwYKNPW6yESz2FvvkRVifu4mV+au
      IJdjvPuzN1n27fPDH77O1KnTzL/zI0KFLOu7OY4Pu/jrH/6U+M4aQtMwr776IupUgIs3Pbfb
      Mmsl3nznPd5+7woNhqdjLdA/No1BrWHq6CSlSPKOInmr6Jp66WmzUy7l2Qt9WiQv4POw67t/
      FcPHRS0fx9EzxWAjLO4kKMri7awQvh0vCuDd8T62Inl3Et2JMf3qOO6RuvSrKAq+pSCBlbpD
      LbAcxL8cBAUqxQqbV7zE95IH7sdo1TP+8hBrF7Zu/25/O8rODT+lXIntqzt0T3Wwdn6TeCBJ
      zJ9gbzWEcIcy9sVF8lQS2yvrdI8NQzFDUd+Iw2xgotfBZqAeT21t6sWQj9yzSF5jzxT5xbdo
      P/5tNE8igc59uLNIXlNHD+GNG6xs732mtlZ+34e17xhSLvL0Fclb9H+uSF6XXc1OovBYi+Td
      idlhYu7NRRY/WENRFERRpO94FxqDBkEQ6JpyY7TWM0Z4rvvon+k+8OZ9QRBAgEt/O4ej3Q7U
      F9eJvRRtQy3UqjXMDiNmhwlFUSjlKuQSecLbUZbPrhNcDwP3SIsy6bbw86UoPU0W0FvQlRJk
      imXWdlP0td0qkpcKUjQ47lkkL7G7hHH8FQLX3qf6tOyIuYM7w6EVRKZPPotTnTslky8AACAA
      SURBVP9ckbyYb4NELFrPCvE08EmRvJnBzxXJc3T1E5r7AENTz2MrkvcJiqJgb21g6pVRSvfx
      g3ySLWJrdoedG35q1QcPNVcUBZVKxTO/d4y4v54XqJwvU8yV8FzbJbQVoZAuUcyUEESBqe+M
      Ym+z0dBkYfCZPvKpIvAFRfJEUaR3dJhqUWCgpx2Ls51jI+3MXrlGx9SzDLTaiPq9BJIlvvnt
      b2DSqdlcX2V3J4S7v4eQZ4P9WB53ZwvB3T2mT52mzQpVvQPzE/BM3g1BEDBZLAhKidWVdcLx
      DE6rgbWVVRSTi552J8GdLUKpAo1NLYyOjNDe6kKqPS1F8mQ21laJZ2uMDPVQiAfZ3rlVJK+h
      gWJJoqfH/aUdYZ74FmEpcP8D7yAVSt9+s+/cDGBsMLBxaZviLY9taGOffKpAtVRl6Lk+mntd
      NHY6MNmMB+ontBlhdyFA91QHpVwZk92Ie6QNh9tOa38TWqOOnQU/Q8/0IapFRFGkuaeR3cU9
      eo528uFfXDgsknfIvXlv/efcKF566PPLhQraW1Ofp43/YfqfHoZDH3JvtFUdzUr7wzfwSdqo
      p/Q1+7lw6E8+CJ9ISl+EwGev6Wkc4V+M8rmcnoLAXfN83u8+PFAjd7T1VXE3m+5l6yd/r4Pa
      UI2VidaCD23fJ/09yD08qG13tnmQfu48/vMTcrnCn/7bv+If/Vd/xNvf+wtGXv41Lr77LtYG
      E6K9lxHNDp6GF/jOkJGzZ97mrUtb/O7v/s7tiNCvA9lYkPlVL0ajje4mmbh2kKHmCnNXw9i0
      MYJFNWarHU0pxcD0CaSIB3/VjH/+Mg1NjWgsrfQ54PpWCHWtQvfECbLba3TNHMcoS3zw3jtY
      7M00tbQRD2yyEc5x7OjxrzQitBxZ583rYZp1NfonRwnsFTkx1cvc3FWOdNt5Yz5Ce4ORlkYD
      krGFbqeG+eVdjh0Z/cps+CLkmsz5H1yltb+JgZM9VEpVrv7kBiqNivbhFkKb+9QkmbahFkrZ
      EslwGluzleHnDhYOvTnrJRPNodGqmfz2CDVJZumDNUq5Mm1DzQRWQ+jNOtqHW9ldqK9jBk/2
      kI5k6ZqsF/X+3AAQVFpGG1VsJSrEywK1vZu4Rl/ilRk3//bf/D8MjdclJ7RmXn7hNGtJ/dfq
      4QcI+PaYPvksFq1I2neTvd1txEyVsqxHVKlpsNtpMFtobhbY9qVQZTN0DrWTb+1iemqAhRUf
      G/4ML55+DkHOcW3eh+mO9nUGE3a7HZvDRbfLRG078ZWHQyOIDI5N00mA/UKVRGSPzc0ayVvK
      i8Vqw+400eJ2srgSwImWhsbHsz3LvxzEPdJKTfpU1dGZtOgtempSDZ1Rx9jLQ8y9tYDBrOfk
      b0+z+P7aPVr8PIIg4B5pZafsR3PLOalSi0x9exTvDR8qdT1diiIraHRqjFYDck3Ge8NPTZJx
      uuvP8V1kUIGjM5Pc+PAtVI5B9FoNklQFRUYRxKekzuOXQxChdluSFbDanTidDtSCgKjS4HQ6
      sTdY0Du6KSW8FKoCRo1IIrTDz948g7uvBxGFmgJKTUIRP3sbDWYrTqcTvfYRxsEqMhtL8/hy
      WvqaTBhNDTidTgw69afX5LCjUpvRyXk8wTTtrQ/uaX1YqhUJz/VdQpv77C4EUGSFyq1EVPbW
      BqSyhMNtY/nsen1admvK8jBajEanwem2k0t8mqhg7cIWerOetqFmTv72NFPfGcMzt0tDs4VK
      sS5h9x7tJLhRd2reVZM0uyfY/39/xEt/9E9od8pc/8lb/OynNxk5fhqt4mH9+sfYmGSm14rF
      dDDp6mmgq6eb69cuoTPY6G3V4jDacTgqGPQ1ULJ4t7cwme0cHevHoKSQ7RMIgkBr9yADvS0s
      bWwy3NfJxQsXUCEzOHWc2Ooc87OzdHf1k0/F2NqScfcO02YW0T2CaFhBpWPsyDFG2ixQSdFg
      t+FwOLCaTSCqiPg9kDIwNj1JS7OFxd0yhsfgiNRo1bz8h8+RTeSJ+xNEdmKYbEbyqSKFTIm2
      wWZyyQKlXJnBU72kwhmuvH6DpgPmBlJkhY3L9V1mOpOOxF4KtU5NYC1MMVtCrVER3o5SzJVo
      7Wuitb+ZYraEo83G+oUt+k7U9zkfyqCH3JP313/OzdLlhz4/vBWhudf1mfCDp4X//sj/eiiD
      HnJvNJKOJvnhZdCm3lvnPjUxJJ/lMCvEIfcmWaOgOnig2teFu05OFy6+i2viFWbf+kvUliYG
      JmcY7HAB9cXKlfdeo+o6yvNHvkS+mCeIf2eH1q5uavk4iaIGORtkL5rC2d5Lh01NrCjS5rKx
      txekvb0N7/YWDruFja1dNCY7rRYN5vZusr4lqpY+7KosJdGMWUiztFPg+GQflUKG5dV1JLSM
      jA/hWbhJSRFo7uijGNmhaWACbTlJUXi4IiPVTIgLC7sYNCqGJ4/gX5ujcKtInihX6e7qIB4K
      oHW0fMkieQfHt7JHaDtCa28THaNtKLLC8oUNitkyky8P418JEt9LMvb8IKlIhr2NML1TnTR1
      HSyTXSaeZe3yNjO/US/DKtdklj5ep1yoMPnSCLvLARLBFOMvDrG3HkZRoPdIJ7FAgrb+erj+
      XYPhfBsLJMuwnyrx7e+8zMdv/YTCLUUrHVjAF87geYoyJR8UuZIlkS0T3NlFpVPwR8ucODFD
      JuQhk8uRzBYASCSTpMIe8oqRsM9DS+8oYwNdGLUVAuEsyXyFZDhAPBJGUGvx74aplNNUFVhf
      XaV39AhHp8YwaAREvaMerNbqpCbLeDa3KeUzZAsPF1wnl/O0DR5huNXITiQLdxTJS8cit4rk
      7T+RdO7ONjvHXp0g5IkAkAilMFkN9E13sn55m1yqwPR3xlm9uEXYE+X4q5Nsz+8euJ9yvkKl
      9Gn8cWwvicVhpnuig7XL9dQs098eZ/ncBuVChXKhwvb1ndtbJeEBiuSpNEZseolcuZ7r/8dv
      fMRIfwuZTPoOKfHrRWuLi3AoRLKqxqYuoDc6EEQRk0lP5Y6IRKWU4cL8Ft2dzfQOT5D0rTI7
      v4LO3kYp6UcWjKgpkyzINOhrhJN5WrQltkI5qjURHSUufXyWYKJAPORldnaWQCSFqDbiMspE
      0l8ia8StcOjFnSgu62eL5PW0mPAEY0iC4YmEoAsqgbl3Fhk+2YcgCFgcJkLbEdaveKiUqpQL
      FRY+XKWQKaLRqbn+iyXSd6Qsf1BcnU40uk/jj61OM3ubYTauepAqEsVciYWzqxTzJSqlKslw
      ikQoRTFbxHOzXvPgnt9GqVIi7FsnLTahz++yEBB5+ZvfIBVYo1zSP63hHfdFa20if/09LO5R
      1DoHueRVUikj0WSRZpeTUCZf33Cut/LKy6NcnV+kv7uJ9p4BvCvLVFUGKrFt9P3fQFfcJFXU
      UEpFURvMCGYz6ZAHl0nEF8nR1tKILCs0OFvpG+xGo9OT3Yf27h7OnnmPHnvnw12EKNLVP0S7
      JspeNI3F0URf3xAarR6t2kTo7Z/R8cxvPna/jaIoLHywysCJHrQGLdWKhEqjYuhUP7FAAqvD
      hM6kI3+rkIWrw0GlWEFnOti2S0VRKGZLlHKl2wNJrVExfKqfqC+OrcmKVq8hlypQKVXom+5m
      9cIGWqO2HjIi36NIXjS4g6GxG//qLHnZyPj4CEIpRaSooqPJRq2UYT+r0OZq+Gru2hMgHY+g
      MTsw6tSU82m8/jDu7l4MqhoejwdFa6HNZcdsNpPLpEGAYDCErclNk91MYj+MydUCxTT5mhaT
      WkLRmNCrBTKZLBarmeCulxI6ujpb2fftkC6UcTS7sehEjGYzmXgEtdnxUMmrauUc69s+1DoT
      vT2dRAMekrkyNlcbbY0N7O/v09jc/KWL5J3bOsOa9OCb4hVFYXd5j0KmiNVpJr6XZPiZfva9
      UdRaNa19Tex7o5TyFbrG2knup0mEUnRPdKDWPPh0TVEUfCtB8ukCRoseW3MDpgYDwa19tHot
      Lb0uwp4olWKFzrH2ep3ibAmDWY9vNUjnaBt/PPGPD4vkHXJvDjoAvk78lyP/46Ef4JB7o60a
      aFYecpr2NeCufoB4OIBodmESS+RrOmrFJFa7C793k7Kspq+/D50K9na9VNVmutqbH/vWuy9D
      pVxEVOuRyjkErY5aRcFo1JFOxNFb7eiewD7agyJXiuzuhVHrjLS3NpGIBMkWKlhsTvRaNWaT
      kUqxAFr9lyqSt5GWyMrxA52jKArJ/TSOlk9jj5L7KXLpAu39LST306SiGZwtNmxNDWSTeQQR
      zA2me7T6YP2kohkysSztAy2kYxnSsSzugTbymTwoYG20UswWMTXUQ3juemfef+t13j77MdGt
      q5xb9PH2a39NJJHirTMXUFcj/PCnH7F86Qw3dxP4lj7mwuLBJawnSSy0SzKbY2Fpg1o1xcZm
      GJBZvn6R7b2D/bGfFNVUgEhJjZL2sexPsev3YTKZ0GpUrK2uoQCezXXK0uOf4XoWdvnox5/u
      IivmSixdWCefLrBxzcP61S1MVgManQapKnH5rTm8i/4D97N9Y4dz//7TMA2pKhHy7lMullm/
      uk02mUetVTN35iZrs1uszm4R2g6TimZun3P3Ink6O41ijv289Jnfq9Qa9DoNggBLmz5OnZhm
      ZmaGzdWlAxv/JJErBS5fuEDH4CiaW3egnPDT0DdDKR78eqhbikw44GMnnMNlM1DIJNnZ2SGZ
      K9NiFNjPSxQkMD3KiNQvoG+qm+ZO1+2fNVo1UlUiuL2PxWFGo9Owcc1DxB9ja36HvqluVA/x
      leqf7qGp41PnmVqjpn+qm0w8i6vDicGsZ/3qNi09TQiCWA+HXvKxfm2bfV/dj/WFvZ56/jiX
      z1/9zMOQz0T5m++9wemXnsGi15AulMmlYxit9gMb/yQRtUYmxocIBYK3t7V5vQFiQS/74SCZ
      p6UQ3r24lRXi2EQX4VDyM1khWvu68d84j9r6ZIrk/TKZRA5nq52j35wg4otx5OVxTv/ODP71
      IOHdCJ6FXTaue5Cq0v0buwdyTeb6+4v0T/fQ2O7A2ebgmd88RmAzRN+RLjRaNXqzgSMvjRH1
      1wfAXfU3d1cXeoub0cFOtA4L9t4hjHodx2ZO88KxPn7y/jl+/dVf48Oz71ETtbz6rW9/KcMf
      N3qjBYu1Ba3iIVNRYWswItdaeL63j0Jyn1yhSIPe/KTNvCeixkBgcZ64SmFg4hjBdQ+zs7M0
      tvXQ0+4ERUXfQ5Yf/TIoisLqlU0S4SQLH6+iM2hxD7ZSypdZvrDGwLFels6vkk3lGTzWS0t3
      E/lMgWQ4hVpzsOS4K5fr/SyeX6O5sxGtQUs2mWf54gbd4x0Et8OUCxXcg63YGq243E4crXYW
      Plpm4vkR4DAc+pD7cMlzlm354ae4yUgam8v6VO4Z/4OB/0Z4OpL0HPLUIggiauHh86G6mp9M
      qdYH5XAAHHJPBERUv8LvyV/dK/sVpxz3cmY+gE0nMDY1QjBUZGzIzcrKEoOtFs7c2MNpMtDW
      YkVlbqGlQcXqZoDR4UdfrDDk3efqmXl+6794FainQLzyzjUKuRLHXp5kZ9VPOpahudOFKIqE
      diOYG4wc+8bUA/ehKAqrsxuEfVF6xzrpGqnXobtxbplcKsf4M8OsXduiXCjTOewmGoihAOOn
      hokEYvSOdwEPEA16yNOJUqvSOTjJscEmgvEcmWyOUqlEJpuDWpW23lEmJ0dpbXIQ2guTT0UR
      dZbHYpvZbsLR/KlzKpvMYnVYOPnKUXzrASaeHeHYN6bIJLL0TXZz6pWjlPIHK86iyAqZZI6X
      /u6zhHfrWbxz6TyhnTA6vRatTku1XGXy+VEi/ihqrQaNRs3q1Q0i/hjlUj0M/XAAfF25lRVi
      wZent9lEYn+PjY2NW2lRFAI7W2xseZE0DYjlJP5gjDZ302MxzWIzc2doQE2S0eg0qNQqFAXC
      uxEWL65y9OX6IJg9M8/0yxMH6kNRFNRqFYJQL4AHUC1XsTfZGDrez/KVNVQaFdsLO5htZtRa
      FalYmly6gHugjY25ekr1wwHwdUUQGRyf5uSJaQxqkSZ3D5OTk7huJZgVBAFBUZAVhWanFm9M
      wqJ59EqMoihs3fSys+JjfW6LZCSF0WLAvxnkyrvXcbbYufT2NXQGLSFvmAtvzGIw6dnbOlgx
      blElUpNqXP75NfQmHYlwCpPVSC6VZ/nyOhabmUKmCIJAIVtk7OQQtsYGesY62brhwXQr7OJQ
      Bv2aosg1ZERUogCKjCQrqFUqJElCJQoUS2VAQG/QIygyUk1BcwCd/ROueM/jU9Yf3C5FoVys
      UJNqiCqR3VU/A0d6kWWFWlVCZ9RRypeQZQWNVl3/vVRDpVahNx5sT4BckykVyxiM+ttt1Go1
      qmUJvUmHVK3Vi+iZ6sUC5ZqMqBIpFcrojTr+Xv8ffbq8l2WZUukR1rU95JHz+c2VCqVi8fZP
      1erBt18KkoBG0R/oHK3WALcyyE8cubUWEAEdUAOt/pf2QH+Sbf4hHME6vbGecUKk/q8ABv2t
      fkTqyXnvzEhRA63OALec/Ycq0CH3pKpUyEmZ+x/4NeUzRfKMxvr8cfPmFTZDSXqGphjubmVr
      4TI1ex/DnY0UkvtcvLbAwMQMhaiXzr5Brpw/S0XRcOLUCXz+BEdGu1i9cZV4Rc+pmWmCmzdI
      Cw4mB5+OuHJFrrGztUZW0jPQYaOkasBulInsF1DJSbZ8URrbumlvECiqbNgMCtF4AZWUxrMX
      o3dolFoxQ1NTM9RK3JhfpCJDz+Awcd8m2QoMjo7TYHx0hTSkfIKri5uYGxoZHWgnnirT1NhA
      JLJPo0XLlZsbqEQt3b1uTBY7Rq1ANJqkqelgjilZVaOk5O9/4B2k9tNsXt+h70gn9hYbgiCQ
      CKXwLvgYeWYAg0WP96aP5h4XtWqNjWseOkfdNHUeLHSjWpHwrezRd6QuaRZzJZbOrVGTZLrG
      3VgdZlYvbdJ/rIdsIgcKtA00k9pP42x3AF+wCL5xcZ4Tr3yLC+++Rr5c4NLsHJcvXkaWKnzv
      hz/hmRdfxm5Sc+nj98hkMngiEq++8h2c6hTvn5tn9eK7BGpOjo/3ocgS564sMH/pI+SnZLmx
      t72EZGxhqLuNYmqPSFYCSvh2IyTjUQYnT1DZ91DSmtlYWSHo3aKmllnbjjF9ZByNoODz3QoB
      rxVQWd3MzJzAZdGSrWo4dmSU1eXlR3oNUj6GqW2YdkOejb0Iu7fCuH2+XeRCHFv3FDMz01jF
      Mt69GNVCilDs8bzJi7kSR745xvpsvVhitSyxOedl4oVh1Fo1uUSe1UubZBN5CtkSky+NsnXd
      e+B+gpthPDc+DcU3mPWc+PUjtPY3o8gyi+fWmHx5FJ1BSyyQIBqIs7MUQBDF27lI7zoAFLnA
      5XMfo2gaKO1voXUfQ5PdI55PgqkZk1aD1fJpsFhod4V3f3GG9C0pdz0QYWKgE4PZilLcR9E5
      MchFEuWnI8oyna7Q3upEZzSgkmXWFuaYnZ2nIMnUKkVWlxfJylqMOgPuBtjJiLTY7bQ6VVy6
      dI3cL12Hf2uF2dlrJPJl0tE9llbWMTc4Hu1FKArejRU2AynsJg1B7zqzs7OEEjlQlPo1XbsJ
      1iZKiRDxUBBXu/vR2nSLpq5GFs6u0jnajiAI5FJ5EqEUV39+E++Cj41rHsZODwH1zA4rFzdw
      Dx08c3XXmBtr42eDFuWaTNQXw9nuIBZIMH9mkbUr9RQp6WiW0PY+Cx+u4F+t1zy4e5VIwcCR
      Eyf5w3/w+2yurlLJhqlWc6z6StRy+xQqErncp5/F1q5RXvnOt2m4tYjva3Gw4glQyufYXrhG
      tlxGkbJcXtw78EU+CiwWDaFIkkqphCyKDE8eY2ZmGqNaRKXR0eQwU1NpUQNtTQ1ozI0Icg1H
      Wz+njo2y4/3sBqCO/lFmZo7jMOkw25sQqwXMFusj3lcg0N7dx/TJZ2m26mjrGWJmZoZWR12D
      H548xszxKfRqLQ6DwlqkQov10dc2UxSFxY/WGDzeQ/tACwBGq4EGl4Wpl0fJpwpIFYnl8+ts
      39hh+eN1usbcdAy3fSX9B7f3aeltQq1R0+CycPQ7E0gViZnfOIKrw4m9uYHhZwfIp+u5n+5a
      JE+t0dDS0YFeFCmWZZ59/gXGhnupVlQ8e7SPi5euorc147JbaWlzYzQaaHY5QRDR6EwcmTlB
      NrCGJ5TB0tDI6Zde5MjEMIV8iVbXk987YLE7SQS2CSUKNDW50OlNGLQioqjB0mDG2dyB06CQ
      l1QYdVpErR6LQU1odxtvMMHw6BCqSpaN/5+99wxyI03vPH+ZSHgPFAqF8t47sujbzvT0TGuM
      RmZGZrXSru6k1Wr3nFa3cRtxcbvSh42Luw1F7N1Jc3vS7un2FDcaP6Oenp62ZDs2bbG89ygU
      gCoUCt4jM+8DqovsHja7qzkkqxX1YzBImMT7ZiIT+b7P87z//8o6WoubeHCNza0gOqsTm8VM
      W0cHqb1dzDYb4oOqghQE9CYrNpMOARA1OqxmA6IoYrFYWZqfJRyK4Kiuxm42IGrNuB2HL/H2
      x1aJKuGPv4EKOxu7hFZ2yKXyBJfCuGtdGEw6NqYD9FzooHmgAW+Lh9p2L/GdJOHVCKm9NJ6G
      jz8HUFWVhWsrpKJp0vEsglCRSy/minibPIgaAavbwty7S3Sfa0erl9BoNNS0VbM24afjVCs/
      /cuLxyZ5x9ybt1deY6E8/om3P8omeb/f/S+PVSGOuTeaog6nfB8lFFo+UXz/YfGzqhCqiqwo
      aDSVrJooiqiKAgLIsoIoatBoRFRVQZYrZsWqKqMioBEEZFWt/CvLqIBGo0FR1INtymUZEJAk
      DbJcRkVA0mge+i/Eezc+RVH23cw1oCooqoogioiArFT2VxCFI+eMo6oqsiwjCCKiKKACoiCg
      KArC/vEHAVEUKmURgKKCeMg1kkq8SLy8c/i+lRU0GvHAF0BV1EomVhJBrZxLmn31DaVcef6T
      mOSpinpQC/ReuwCiRgC1Uol65z4LooB6x3G4SyKszF/95V/zT/7pb/Nv/oc/5Y/+9F/z/De/
      TbtPYCHlpBgN8pv/5A9Jzb7JN354g3/5r/6Y2Rf+AzcLnfzRF3z85ZtxvtApcmNxB4fNwomT
      J/j+j37CH/7e7xCeeZO/edPPyb5Whnvb+cv/+J8Y7GpE8J7iS48/ePO2O9leniJhrCE4P4nN
      6aSmsQ3/3Cg6swOHp45CYJE9vZlCKs+TT15AexQW195BYWeRF8d38OpLtPT1sBWsmOTdunWT
      4WYnL05EqXOYqHbpKBlraHZpGZvbYGTowR/nhWsrJKNpEOD0LwyBCjdfmgABOkZa2ZwPkk3l
      0Bt1lAplSoUSZoeJoacP17e1qU0mLs3yy/9tpew6nykwd2WJ2HaSmuYqdrdimO1G6rtqWRlf
      BwS6z7WR2EnROlTJSf1sFEiQaDTDyuoC7QPDrK+vIjrqkTQ6Ri48SZ25TLIAk4sBnjvfzuxq
      GI3eik+fxZ+oKPVeuTHJ5z7/WardLvQfqD8xmCw47Da0GpGa5m4+89QI4Y3D23D+vJB0esxm
      MwadDo2kxWw2YzQa0EgmBk+exGPRUz6KIsCCQHvPIL0tXlK5EtHwJvPz8+wlK6UPBqMJs9WM
      t66eWChEci+MvernE2n5KLrOttE80IBhX+8zFcuwG4whlxQUWaH/iS7qO3wYTHrkksyZL50g
      sXP4HEVzXz21bbeHZ0aLgROf68dVY6f9ZAuiRqRUKCNpNZhsRgwmHcuj64TXdkhGK2K8dzXJ
      6++t46cvTfHks6eYunKN2uYWkIu8/v3/hxUaabQUmJ9bYjceZ/LWJAAnzp/j1rtX9m/FoIo6
      MlvTzGzF3/fp7pp6Wpoa0UoCweVJ/u2ffZMv/eJTh975+0UVQNKImK0OfD4fFqMOndGCz+fD
      aTUhlzOM3biBpaYRwyNQWP5I9suhA1k9bdVmLHY3Pp8Ps1EHCLira/DVVCNpzeipmOTV+x6O
      luvmXJDdzSj9j3dVhl8CeJs9DD/Th39ui+Vb62TTObrOtNEy1MjYa9OUioefKIh3kVJJRtMY
      zHp0Ri2P/+ppznxxmMWbq7h8Tgq5EoIg0HWmjcBCpfr0rnkAX1c/4Z0oDd5GsrthWptrMFjd
      fPHXfpd+S4wbozfpfPrrfO3Xf5sqMYHGbMNkq8Zp1mAzG3j6yfO8+pOfsJlQ8NhMkN/jpZde
      I4OevcASN26Nky2qdJ+4wL/4g1/nlVcuIT/EYNTq3ATL4Sw+l4VscpeFhQV2YmnkfJqFhQUC
      21GMFhcjZ87QWl99JCMYgmSgf3iEgZ52JI0Gu8OO3W7fN8mTCPuXWZhfJldW8HltJAtaDA9h
      GKcqKos3VknupVke22BrKYzOoEMuyYy+PIm7zsnyrXX2tuJszAZI72Uo5op0nmo9XDuqytzV
      ZQILYWYuLxLZjFLMl9hei9Dc34CiqNx6ZYorz4/ia/NS1+7FWWOnZbCB6bfncddWwvHHYdBj
      7sk79xkGDS5v42utPpImeb93HAY95qMQizoc9xEGdTRVV0qPj0YVzM9wbJJ3zD35JGHQTxN3
      LYW4dvHHrMWhyefi7/7mG5QcTczemqClpZHLly5S5XPx+suvsrQexKApc/Hll7g5s4LFWY0m
      5ee7P71Gd28n67cucmMjR6tb5q2bG1RbFS5efJOltQBVNbUYdSKv/+BvSOjq8Nlk/vqv/gZP
      WzeaTIC//t4bnBzqoZSO8vprl9gMJ9GVdllPaag2pHnz+irNDV4gz4+++R3Wt7Yoa61UfYx0
      /25gmVvTi8SzJRwGhVtjU2xtx/B4PcxNXGPNv0VOlnBo0ly8OsFuNIbL40F7HyrLP29KiRBv
      3ZxhOxTE4qpmeeo665shCoqGeGwPp8PObnCTstZ0Xz5hhy6FANanA8xfW6ZcKmPfF8Van9pk
      4cYqNreFdDzLzDuL1LZ78c8FmXt3Ca1ei8V5OHXoRCTJ2OvTNHRVolu5oyjxDwAAIABJREFU
      dJ7x16ZZm9xElmUc1TZuvDiBxWVmbcJPJLCHvcpKeD2CzW3h+T9/9U/v+o1uBqKsr85RSvhZ
      WAqwtZdkYWEFgJWFBcLLN9kRa/ncZx6ntrGNkdYqXK1DtNW5uXVzArUYYXM3TXR3m8XpCZLZ
      JItrIV58/scMPvYMn//sE9gMWkAhnCqwPH6N3fUlNoJbxDJFpm9cQ1uMshApcPHFF2g99SRP
      nB8mF9kiuJeBcoqFlfdCpyXCCZnnnnuO7ibvxzpw6WyOjr4TDHY1MzOzSP/IKXobjMyuRsjK
      EmfOnCYR3UItpHE29jHcVcfM7MqhvpwHjVLMUNc5TLfPjD+SAr3lwCQvGY1QUiEY3sHwCZZB
      3i/VjW5OPTdEeK2i1pDPFNhcCOJt8WC0GJDLCuViGVWF7fUIp784xOrE4RXGi4UySvn2cq/3
      yqGrm9w4qu2EVnfIJLLkUhWPsFK+xNKtdbLJ3O2E2V0/WZRw6AXGZ9bp7N23lL9zB7sfo0W7
      zTe/9T2imdIdrygsrPlprjJwa3IFQRA5O9LJ1dF5AFJ5GYOa5v/7q28wF9qfbwgmzNoS84Eo
      7fXVoJYYXQgz3OHiytUJ9jIFPFYTGklCQGbi2tu89No7lIDRd15lKRAlEd7gpZde+vjS5uU8
      k2M3mV32I4saTJIGs8tFKZkmG9vm7TffxGi/Pe7VWVxolMMtCnng7JvkzWzsUmU1vM8kr9Vn
      ZiUQoSw+GpM8VVW58dMJes53IAgC+UweVQFUWLi+iqfBhUbSIAA6g5bRl6dIRA6fB/DUu5A+
      oH5dKpRIxzKY7SbmrixjdphI7qYo5UvsheLEwnFKhdLBBfeh9/QTHVW8NhGmzmkC9NiNRVY2
      NsiIBoq7O9S0DVBnLLEZTR9sU06sI5ubqG7uYmd5CgVw1HWTCS4gA60+O1MrEWq9zvcllxqc
      JuZ3CjjNErnYFlqnD5Oni3Rgip4WH1fHZtjc2KSMhqGzT/Dc5x5HC4w8/iwd9W7MzmpOnjyJ
      1/Uxqx0lA4MnTtHb3oRTL7C0GWZxepGqBi8mp5f+rhZymSyyqpJNJ9lYmsXk+uRu6Q8EQaSh
      pZ32xioi0RQWh4fOzk48DjMWbwuhsTdw1Lc8EpO88YsztA03IUkaivkSJpsJBJC0GkSNQDqW
      IZPIkklkaeiupaHbR+1+6fRh2ql8To7UXppCrogiK/jngjR01yJqRDpHWpBLMnJZ5uTnB6iq
      d+Ft8VREePdPv7ub5G1v4/I42Nzco8omUtQ6sIh55hZWqW3pxGXWsDg/j2h209HSQDG1RwYj
      Vk2OpGyiymYgtLWFwahFb6minAyTkI3Ue6ysLs6Tw0BXRytajcB2eAe33Ug4UcIkFBF0OmTB
      QJXdRDAYpKbWx+bKAnnRSkOVkbxgxmlSCe3mqPW6gDJLM7Mk8yW8DW3UVzs+uDs/Qz6bRtSZ
      0EkiqioT9G8gGB34PC5S6RQ2q5V0IoZWr2N9I4DV6cHncR0pFxylkGFpPYCkN9PcWMduaIN4
      uoDdXUON20ZkJ4Kr2nPfJnmHDYOqqsrmfJBcKo/FaWZ3a4+ecx0Uc0V2NqM09tQRWAhRyBaw
      OMyYbEZi2wkae+sObZIXWAiRTeYwWAw4PFbMdhPZVB6ry3yQu8ml82gkDRpJJJeumOQFFkLU
      d/n4g/5/dWySd8y9ud88wFHmOA9wzEciFnU4lI8XXPg0ctc8QCS4TjCSxNfYilnIsbwRxOqu
      oaXOQzAYptppJlHSUmWRCEXTeBwGlhZXsHsb8FU5KOWTLC6tobO4aGuuZW1xlmxZoqOrk3Iq
      imJwkN7xY6qqx2nRszw3g6+tk9DyIpmSjLehlRrXg9OxDAfWSefLiBodDU0NxLe3KAgG6rxu
      Uqk0NpuVXDqN1mwmGQmRLmmo97nZ8m9SKMuIejOtDTXEd3cxOt3oH0F4VClmWfUHMVoc1Fbb
      SedkrGYD6XQKk15idWMLkKiuqcJgMKHTQDqdw2I9XKhRiZeIy4fLA+QzBYLLYXytXozWiqZQ
      aGWbTCJ3kBUOre7Q0OVjxx8ln8ljtBoPllB+XFRVZS8UPyhrAMimcmyvR6jr8FHIFtgN7NHY
      U0dyrzJXtXus5JJ5zI57mOS98aMXkKqc/Ojb32T6yhtspEWm3nyehVCcv/3290j4x7k4tgbZ
      XX70yju88t1vUTDaSMZjAMT9U9xYjhKZf5e3bi3y09cuY9Nm+Nvvvcrc5ZcZ9+/xwvN/yztX
      x1Eym/z7//l/YzUW5cWfvovH48FseLBrV81WGyF/ALPdRmR1mq2kTCnmZ25jl63VBfbSWeaX
      VkluLbK8nUXIRZhaCmK129nc9OOwmitL8iavsOTfe6B9/TCKsQDhnER+Z4XV0Dbzy5Ww8Pz8
      HEpii2jZhNNpQ05FWA3tUc6nWNp4OGuyg8thTDYTExdnUFUVRVFYnw7g8NqQdBqCS2HMdhPj
      l2axusyYHWY2ZgKHbmd1ws+Vvxs9eCyXZabemMNoMVLMFRm/OIvepGfs9WmWR9dYurlGaGXn
      4GKAe0SBBFG84/8CgrAvw3cXahu8TN4cw2C5XW14u4BM2I+hqkjS7Zi00VlLKbXD8vg8Paf7
      AUjHtpmcnCSavK1m9iCw2l1YrRZcLgdbsTyDXU20dA+Sifhp72xj4toVvE1t+INJhvrbaWjv
      o5jcxuHc385ho5wMYGo6RzG2yaOaRQmCgCBWvpf3qUKgEvSvsbK2ibGqhvROkHgkhMv7cCJZ
      zQONpPbSuOsryhiKrCIIMPfuEondFK3DTewFY9Q0e7B7KralHSMth26nbbgJT/1t9Y1kNE00
      GGP51hrxnSSSVsPK+AaOahsAcqnMxnSAxesrbG/cwyRPVWV2tnf55d/4LYxaCCzeYi5moLmq
      ctvQG0wUsjmKxQKSVkfv2c/x619+ku9/61uo+/GlVDyKp/sxnuivp5hN8cPv/4RTj5253Yio
      xWdQuB5VabVXLgxXXRvPPfcczTUfHcn5eWEWZRJ5mXIuhipZ0ZqcmKxWfC4zdj1EM0XkQgpZ
      uFMeUGVpaYP4zjqh8DapRyL3opJKxNBVtdDkMn64KoTWiFVbYjGcoa7qcMOfT9QrVWXh2jIm
      q4GOkZaKerMoMPLcEMPP9BNc3mbqrXk8jW4aemqRyzJ7oThV9fcvI6MzaPG2VDPyhUHCazuI
      GpGzXz7BbiBG+8lmdEYdJquBgad7iAYqd+67lkKkkxmGLpzHadBRyGZpGHycHkcWf1LCKEH/
      qXPsrYwzuxbm/ONPsL00ytjcKg3tvbTU1yCX8hjcTQx2NoCqUJAlfu1rX+Hdd65RX+vBXFWH
      niLDfc1sJbU0uk046prYW5lnMxwCgwOXzXTfB+ReFAp5bE4nVS47M+PjbO2k6B/sRacRKRQK
      uJxOHFUulibG2QxF6e4fwKDVkM/ncTocpAoqw4P91LnMZBQJi+GT2wh9EhS5hNFZR0O1HQGZ
      QknA6TCTz+dxWM1Mz84T2d7FUV2NxaCSyuuo8x5ekcMfWyOqHk4VYnlsndRemmwqRzQYw2DW
      M3t5keDKdmVF2NwWyd0U5aKMKArYqqwHxtUfuxlVZf7aMtvruxRyBQRBwGQzkY5l2JjepONU
      K7lUHv9sgMaeOlw+B3JZprajhtl3F2k72cwr//ebx6oQx9ybd1ZeZ0H+5GHQxG4Km9tyJNdU
      /F7Xf38cBj3m3miKOpz3EQZ12r2fMlWIY465AzVRJi0/mkjXw+BnSgVVpcwPv/VtnvmVr/HK
      3z3PyW4vlyZ2aGls4Imnz/LgxfUePOG1GRaCKSS1TM/wKa6+8RrPfPFLaHJRXnx9nJPD9Wgd
      bWSDUxT0ddQZs8S01TS6H/wk8uNS2H3PJA96h3oIhvL0d9czMzNFV62NV8a2qLIYqfXaEK1e
      fDaJ2aUAfT0P3iRv/voy0VAMq9PCwBPd+8Vx4+QzBYY/08fOZpSdzV1aB5uIbu0deAm/Z179
      cQmubDN+aZov/t4zAJRLZUZfnSKfKdA62Mj2RoR8poBG0iBpNahA79kOIltRWvo/RBVCECWe
      vtDLN/6Xf0fNwAUS4TCyJFBdV8vDneY9OGRVoLWjG7dFS65YorZKx8pmglAogt1iwmixEduN
      kC3rKGejbO+lcJgP517yoFGVEo1dg5zsrCa0lyGRTJJOpw9M8nwtXfT2dVHjdRHe2iaTiKAx
      PByTvI6TLZx8ZoB8umK4ko5lsFVZOfWFIdZnA6xP+ytKDRYD6XiW3nOdB1qdh8FeZcXhvR16
      l7QSw5/po6bZQ7lUZuTZQbxNHtqHm9HqtWh1EgujK0Q29yjk7mGSZ7S5SCZiuB1WTnz+6/z+
      r3+FsVd/QOTBhucfGqpcJLDpJ69o0KgqWkcjpdgGyVwZh1mHyeYgG48g6IxoUMgUFEz6I+Yl
      sq8KMR3I0eY1k4hus7GxQSJTBFTCW342/FsoWjtiMcbm1i51D8kkLxZOMH5phuFn+g+sibQ6
      CVEjoioqkk5i5NlBZq4sojVIbC4G0eoP//Nqtpt+ptp1LxwnuZdGEIT9THGMqnoXWr1EMpoi
      m8zR0OVjeawix/4zF4CqlPnRD17kj/7Nv+bNv/suS9O3uPjGmxQNHqx/H8Y/+5TLJXK5DLKs
      AgImMU1J60YjAJKRYnITvbkKqxYSsoh01IIY+yZ5Z04NY5BEPLVN9PX1UWWv2A/J5TKlQhFZ
      Valx6ViLPiSTPEXlyguj6AxaAgtBYtsJDGYDW8thbrw0Tk2LB4PFwK3XpjDZjORSeUqFErnU
      4X5dVVVl6dYqa9ObLNxYIRqMkYpl2FoMUS6WyaXz+Oe2aOiuSLR3nW7D5rbS3NfA4ugqZseH
      mOSpqkq5XEar1VIqldBoRIrFEpJWi6T55EvrjhKKIlMqlRFEDVpJsy+TqAIiqAqCRoMiV14X
      VAVFFdAcoeWQAKqqoKqVJBOqWpGkFMV9OUuBYrEECGh1WoT91z/J9/fu6iWW5alD9EulVCxX
      JAtFgfWZAK1DTaBWpBElnYSqVhau6PTag/e/d4c4TDvlYhlFURHEyvcjiiLlUhlVVdHqtQey
      iO/dDdT995YKZbR6iX/c9d+93yQvd4ehWrH4fkM1WZY5nJXxp4Eyn8A37lNFuXx7xd4n+f6E
      sohBOdzk33jHaHFgaD+rL1AJuby3glHHwaKUg8jKYRPqHxyVqnc8p3zgX24/NmpvP/++jxDF
      o/Urd8yjR9JoMYoPNiv/KHmfSZ7RWBk/rs7exN48yNrYFWJ5gTMXzmM3/n2JAUFyd4vZlQAm
      q5verhYW5hfo7e0BpcD0zDr19U70lmqK8QAFnRuXtkBSNeG2HJ1IUDkT5frUMgajhd6+HgKL
      E+ylS1T5GjHrJbzVVaT2dhEtDsy6+5jAa1TKdzFgPQyyLHPj1THKZZkTTw4QWAmSSWQZeryP
      bX+EtTk/fWe6cHgOJ924txNn/uYSQ4/3YbaZUBSF6avzZFM5hh7vI7IVJbga4uTTgwRWQqBC
      Y1cd0XAMb4MH+JAo0Oz1S2ynFFr6TtFVVeLitfn7OgBHjXQ6RUf/CG5NgvWdNFH/PIFUmVho
      i81AiHwhTSiSYGt7l0gwQHgr+FClGz8OcjZGVesQXR6RWf8eeVU6UIXY8m+gqLDh3zgSd/VM
      IovRYuTcF05RLBTJJnO4vA4Wx1ZQVZWTTw0wc/3jm3FDZbI99e4sQ4/3Mv72dGWMr6o09zTQ
      0tvI5OUZAktb9Jzq5PprY+xuRdnZ2mV5cv1gTgD3KIdGYyAVmucHL9+kt+to2Jv+vFCKWcZH
      rzO3mcTrMOBubmdvfYVIPIPXacHmcJOKh0EyIyhFkrki9kO6mD9w9lUhrk5tUl9te58qRJNL
      y/pehqIiYZAe/QWg02sp5Aq89u03SeymCPt3CK6FiW7HcPtc3Hh9nM7hw2mDKoqCyWrCZDVV
      FrlT8aLYDe7xzo+v0dhZTzqRZX50iXQsTTqZJbYdI7ASZPytadZmKqoQH3pvVPIpLHU9/MNf
      kfnpzWm6vvLYfRyCo4WoMzE8MogcXSC0nQRBj6QmyOFArykiGqwU4+OYfJ0IhTixkoDuqClE
      ixp6hkZo1IaZ8e/i9DbQ3zcAgFI2MP/6q7gHPnskjD3KZZnukQ7C/h3K5TJPfOUswbVtJJ3E
      zYvjnP7cCYzmw7nRi6JINpUlm8pSLlWKjUqFEp46N5/92uMs3FrmwpdOk0lk0Rq0DD3Wx9SV
      OQA8tW6i4crirbteAL1nPoPNKrIwdpWsrOUrz5y9n/0/clgsVmanRzFYnPR1OUkmJbSKhaKu
      CrJxtIKGhoZ6TB4v+qIWXVZzJE6kO9GYnOxOTZDUm+jr72VraZvr169TVdtCS10V3uZuGmsO
      b4r3INAbdExdmUMjaeg728XUlTm0Oi1tA82EN7a58doYda0+2gaaP/ZnCqLAwIVeJt6ZZfiJ
      fnY2d7G6LCxNrFHMFRi40Mvm0lZlrvFEP4qi4mv2YnfbmLw8y+BjFTOO43LoY+7JjfXLBFh+
      1N14IPxKyz8Wjlh+/5ijhqIqFJW/v8mS4wvgU4qqKBRLJURRgyRpUD4kEyxJGkRRRADkfbPC
      Q7Wz/+dQ26gqclk+mJyqqlrJ0CqVDK2q7Gd/9RKqUnlN1GjQHjJcqygKpWIZnf62DWu5VK7U
      Hum1KLJCuSSjM2gPtEA1knhg2gjHF8CnlkJkiZcmo3h1BRp7ugiG8pweamVsbJThZievTsep
      dxjxOLQUDF6aXVrGH5JJ3srkOqOvTfDrf/xLAMhlhcm3Z8mmclTXV5HPFshn8mi0mv0LQKam
      uZqWvo8fbVRVlZuvTlAqlLBXWek7300hV+TtH15BZ9RR31HLxlwAo9mAyWokvptEAHrPdhLf
      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
      Zk68vLgbkvdv9/5TcRq/GqwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by Model Year' width='192'>
      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
      t/X/XwK9tmn0ImYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by State' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
